syntax = "proto3";

package hyrl.v1;

service ObstacleAvoidanceService {
  rpc Initialize(InitializeRequest) returns (InitializeResponse);
  rpc Control(ControlRequest) returns (ControlResponse);
}

message Position2D {
  float x = 1;
  float y = 2;
}

message DiscreteHeading {
  enum HeadingDirection {
    HEADING_DIRECTION_STRAIGHT_UNSPECIFIED = 0;
    HEADING_DIRECTION_LEFT = 1;
    HEADING_DIRECTION_HARD_LEFT = 2;
    HEADING_DIRECTION_RIGHT = 3;
    HEADING_DIRECTION_HARD_RIGHT = 4;
  }
  HeadingDirection direction = 1;
}

message ControlRequest {
  Position2D state = 1;
}

message ControlResponse {
  oneof control_type {
    DiscreteHeading discrete_heading = 2;
    ContinuousHeading continuous_heading = 3;
  }
}

message ContinuousHeading {
  float rad = 1;
}

// DEFINE ENVIRONMENT REQUEST
message InitializeRequest {
  repeated Polygon2D obstacles = 1;
}

message Polygon2D {
  repeated Point2D points = 1;
}

message Point2D {
  float x = 1;
  float y = 2;
}

// DEFINE ENVIRONMENT RESPONSE
message InitializeResponse {
  string message = 1;
}
